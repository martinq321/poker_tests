f1[a_List] := Reverse /@ Map[Length, #, {2}] &@a;
f2[a_List] := 
  Reverse /@ (Sort /@ 
         SortBy[# /. {"A" -> 14, "J" -> 11, "K" -> 13, "Q" -> 12}, 
          Length] & /@ (Split /@ Sort /@ Transpose[#])) &@a;
f3[a_List] := Flatten@f2[a][[2]] - 1;
f4[a_List] := f1[f2@a];
carddeck = 
  Reverse[Flatten[
    Map[({{"\[HeartSuit]", #}, {"\[ClubSuit]", #}, {"\[DiamondSuit]", \
#}, {"\[SpadeSuit]", #}}) &, 
     Join[Table[i, {i, 2, 10}], {"J", "Q", "K", "A"}]], 1]];
cardpicture[{suit_, val_}] := 
  Framed[Column[{val, suit}, Center, 0, ItemSize -> {3/2, 1}, 
    ItemStyle -> 
     Directive[10, "Label", 
      Switch[suit, "\[HeartSuit]" | "\[DiamondSuit]", 
       Darker[Red, 0.2], "\[ClubSuit]" | "\[SpadeSuit]", Black]]]];
cd = SortBy[carddeck /. {"J" -> 11, "Q" -> 12, "K" -> 13, "A" -> 14}, 
    First] /. {11 -> "J" , 12 -> "Q", 13 -> "K", 14 -> "A"};
sc[a_List] := (a[[All, 2]] /. {"A" -> 14, "J" -> 11, "K" -> 13, 
      "Q" -> 12}) - 1;
sortbysc[a_List] := (Transpose@(SortBy[#, First] &@
       Thread@{sc@a, a}))[[2]];
eph[a_List] := 
  Module[{straight, e, f, g, pp, pl, pr, pq, q, r, s, t, u, v, w, x, 
    y, z, q1, r1, s1, t1, u1, v1, w1, x1, y1, z1, ff, hh, jj, ll, zz},
   pl = 371293; pr = 13; pq = pr; g = sortbysc@a;
   straight = 
    MemberQ[Sort /@ 
      Take[Partition[Join[Table[i, {i, 2, 10}], {"J", "Q", "K", "A"}],
         5, 1, 1], 9], Sort[Last[Transpose[a]]]];
   e = f3@a; f = f4@a;
   z = (pr^(-#) & /@ Range[5])(*high card*); z1 = Total[z*e];
   y = (pr^(-#) & /@ {1, 1, 2, 3, 4})(*pair*); y1 = Total[y*e];
   x = (pr^(-#) & /@ {1, 1, 2, 2, 3})(*two pairs*); x1 = Total[x*e];
   w = (pr^(-#) & /@ {1, 1, 1, 2, 3})(*three of a kind*); 
   w1 = Total[w*e];
   v = (pr^(-#) & /@ Range[5])(*straight*); v1 = Total[v*e];
   u = (pr^(-#) & /@ Range[5])(*flush*); u1 = Total[u*e];
   t = (pr^(-#) & /@ {1, 1, 1, 2, 2})(*full house*); t1 = Total[t*e];
   s = (pr^(-#) & /@ {1, 1, 1, 1, 2})(*four of a kind*); 
   s1 = Total[s*e];
   r = (pr^(-#) & /@ Range[5])(*straight flush*); r1 = Total[r*e];
   q = (pr^(-#) & /@ Range[5])(*royal flush*); q1 = Total[q*e];
   zz = If[
     g[[All, 2]] == {2, 3, 4, 5, "A"} && f[[1]] != {5}, {{19*10^6}, 
      "straight", Flatten[{{Last@g}, Most@g}, 1]},
     If[g[[All, 2]] == {2, 3, 4, 5, "A"} && 
       f[[1]] == {5}, {{2*19*10^6}, "straight flush", 
       Flatten[{{Last@g}, Most@g}, 1]},
      If[straight,
       If[ f[[1]] == {5},
        If[Sort[Last[Transpose[a]]] == {10, "A", "J", "K", "Q"},
         {pl {8*pq + q1}, "royal flush", g}, {pl {8*pq + r1}, 
          "straight flush", g}], {pl {4*pq + v1}, "straight", g}],
       If[ f[[1]] == {5}, {pl {5*pq + u1}, "flush", g},
        Switch[f[[2]],
         {1, 4}, {pl {7*pq + s1}, "four of a kind", g},
         {2, 3}, {pl {6*pq + t1}, "full house", g},
         {1, 1, 3}, {pl {3*pq + w1}, "three of a kind", g},
         {1, 2, 2}, {pl {2*pq + x1}, "two pairs", g},
         {1, 1, 1, 2}, {pl {1*pq + y1}, "pair", g},
         {1, 1, 1, 1, 1}, {pl {z1}, "high card", g}
         ]]]]]
   ];
ll = eph /@ Subsets[carddeck, {5}];

(*_________________*)

lll = SplitBy[SortBy[ll, First], #[[2]] &];
ephf = First /@ SplitBy[SortBy[ll, First], First];
newsort[li_List] := 
  With[{z = sortbysc@#}, 
     If[MemberQ[
       Permutations@{"A", 2, 3, 4, 5}, #[[All, 2]]], {{Last[z][[1]], 
         "A"}}~Join~Most@z, z]] &@li;
neweph[li_List] := (Module[{a, b, c, d, e, f},
       f = {1020, 384, 144, 64, 1020, 4, 24, 4, 4, 4};
       a = SplitBy[ephf, #[[2]] &];
       b = Table[#[[All, 2]] & /@ Last /@ a[[t]], {t, 10}];
       c = {0, 1302540, 1098240, 123552, 54912, 10200, 5108, 3744, 
         624, 36, 4};
       d = Position[b, #[[All, 2]]];
       e = 
        Total[Take[c, #[[1]]]] + f[[#[[1]]]] #[[2]] &@
         If[Length@d == 1, Flatten@d, 
          If[Length@DeleteDuplicates@#[[All, 1]] == 1, d[[2]], 
           d[[1]]]];
       e
       ] &@newsort@li)/Binomial[52, 5];
dealbest[mf_List] := Module[{a, b, c, d, e},
   a = Subsets[Complement[carddeck, mf], {7 - Length@mf}];
   b = Flatten[
     Subsets[#, {5}] & /@ (Flatten[#, 1] & /@ 
        Thread@{ConstantArray[Drop[mf, 2], Length@a], a}), 1];
   c = eph /@ b;
   d = Flatten@c[[All, 1]];
   Rest@c[[Position[d, Max@d][[1, 1]]]]
   ];
mybest[mf_List] :=
  Module[{a, b, c, d, e},
   a = Subsets[Complement[carddeck, mf], {7 - Length@mf}];
   b = Flatten[
     Subsets[#, {5}] & /@ (Flatten[#, 1] & /@ 
        Thread@{ConstantArray[mf, Length@a], a}), 1];
   c = eph /@ b;
   d = Flatten@c[[All, 1]];
   Rest@c[[Position[d, Max@d][[1, 1]]]]
   ];
theirmax[mf_List] := If[Length@mf == 7,
   Module[{a, b, c, d},
    a = With[{z = Subsets[Complement[carddeck, mf], {2}]}, 
      Flatten[Subsets[#, {5}] & /@ (Flatten[#, 1] & /@ 
          Thread@{ConstantArray[Drop[mf, 2], Length@z], z}), 1]];
    b = eph /@ a;
    c = Flatten@b[[All, 1]]; Rest@b[[Position[c, Max@c][[1, 1]]]]], 
   If[Length@mf == 6, 
    Module[{a, b, c, d}, 
     a = Flatten[
       Table[Select[Flatten[Drop[lll, 3], 1][[All, 3]], 
         ContainsNone[#, Take[mf, 2]] && ContainsAll[#, t] &], {t, 
         Flatten[Drop[SplitBy[Subsets[Drop[mf, 2]], Length], 
           Length@mf - 3], 1]}], 1];
     b = eph /@ a; c = Flatten@b[[All, 1]];
     Rest@b[[Position[c, Max@c][[1, 1]]]]], 
    If[Length@mf == 5, 
     Module[{a, b, c, d, e}, 
      a = Flatten[
        Table[Select[Flatten[Take[lll, -3], 1][[All, 3]], 
          ContainsNone[#, Take[mf, 2]] && ContainsAll[#, t] &], {t, 
          Flatten[Drop[SplitBy[Subsets[Drop[mf, 2]], Length], 
            Length@mf - 3], 1]}], 1];
      b = eph /@ a; c = Flatten@b[[All, 1]];
      Rest@b[[Position[c, Max@c][[1, 1]]]]]]]];
cda = SortBy[carddeck /. {"J" -> 11, "Q" -> 12, "K" -> 13, "A" -> 14},
     First] /. {11 -> "J" , 12 -> "Q", 13 -> "K", 14 -> "A"};
Clear[list]
list = {}; comp[n_Integer] := Module[{},
  Column@{Dynamic[
     If[Length@Setting@# < 5, #, 
        Grid[{{Take[Setting@#, 2]}, {Drop[Setting@#, 2]}, 
          Reverse@Flatten[{"deck max", N@neweph@Setting@#[[2]], 
               Setting@#}, 1] &@dealbest[Setting@#], 
          Reverse@Flatten[{"my max", N@neweph@Setting@#[[2]], 
               Setting@#}, 1] &@mybest[Setting@#], 
          Reverse@Flatten[{"their max", N@neweph@Setting@#[[2]], 
               Setting@#}, 1] &@theirmax[Setting@#]}, 
         Alignment -> Left]] &@Dynamic[list], 
     SynchronousUpdating -> False],
    Grid[Partition[
      Table[DynamicModule[{pressed = False}, 
        With[{idx = cda[[i]]}, 
         Button[cardpicture@cda[[i]], pressed = ! pressed;
          
          list = If[pressed, Append[list, idx], 
            DeleteCases[list, idx]], 
          Appearance -> 
           Dynamic@If[pressed, "Pressed", Automatic]]]], {i, 52}], 
      13]]}];

cd2 = {{"\[ClubSuit]", 2}, {"\[ClubSuit]", 3}, {"\[ClubSuit]", 
    4}, {"\[ClubSuit]", 5}, {"\[ClubSuit]", 6}, {"\[ClubSuit]", 
    7}, {"\[ClubSuit]", 8}, {"\[ClubSuit]", 9}, {"\[ClubSuit]", 
    10}, {"\[ClubSuit]", "J"}, {"\[ClubSuit]", "Q"}, {"\[ClubSuit]", 
    "K"}, {"\[ClubSuit]", "A"}, {"", ""}, {"", ""}, {"\[DiamondSuit]",
     2}, {"\[DiamondSuit]", 3}, {"\[DiamondSuit]", 
    4}, {"\[DiamondSuit]", 5}, {"\[DiamondSuit]", 
    6}, {"\[DiamondSuit]", 7}, {"\[DiamondSuit]", 
    8}, {"\[DiamondSuit]", 9}, {"\[DiamondSuit]", 
    10}, {"\[DiamondSuit]", "J"}, {"\[DiamondSuit]", 
    "Q"}, {"\[DiamondSuit]", "K"}, {"\[DiamondSuit]", "A"}, {"", 
    ""}, {"", ""}, {"\[HeartSuit]", 2}, {"\[HeartSuit]", 
    3}, {"\[HeartSuit]", 4}, {"\[HeartSuit]", 5}, {"\[HeartSuit]", 
    6}, {"\[HeartSuit]", 7}, {"\[HeartSuit]", 8}, {"\[HeartSuit]", 
    9}, {"\[HeartSuit]", 10}, {"\[HeartSuit]", "J"}, {"\[HeartSuit]", 
    "Q"}, {"\[HeartSuit]", "K"}, {"\[HeartSuit]", "A"}, {"", ""}, {"",
     ""}, {"\[SpadeSuit]", 2}, {"\[SpadeSuit]", 3}, {"\[SpadeSuit]", 
    4}, {"\[SpadeSuit]", 5}, {"\[SpadeSuit]", 6}, {"\[SpadeSuit]", 
    7}, {"\[SpadeSuit]", 8}, {"\[SpadeSuit]", 9}, {"\[SpadeSuit]", 
    10}, {"\[SpadeSuit]", "J"}, {"\[SpadeSuit]", 
    "Q"}, {"\[SpadeSuit]", "K"}, {"\[SpadeSuit]", "A"}, {"", ""}, {"",
     ""}};
comp3[n_Integer] := Module[{},
   Column@{Dynamic[
      If[Length@Setting@# < 5, #, 
         Grid[{{Take[Setting@#, 2]}, {Drop[Setting@#, 2]}, 
           Reverse@
              Flatten[{"deck max", N@neweph@Setting@#[[2]], 
                Setting@#}, 1] &@dealbest[Setting@#], 
           Reverse@
              Flatten[{"my max", N@neweph@Setting@#[[2]], Setting@#}, 
               1] &@mybest[Setting@#], 
           Reverse@
              Flatten[{"their max", N@neweph@Setting@#[[2]], 
                Setting@#}, 1] &@theirmax[Setting@#]}, 
          Alignment -> Left]] &@Dynamic[list], 
      SynchronousUpdating -> False],
     Grid[
      Partition[
       Table[DynamicModule[{pressed = False}, 
         With[{idx = cd2[[i]]}, 
          Button[cardpicture@cd2[[i]], pressed = ! pressed;
           
           list = If[pressed, Append[list, idx], 
             DeleteCases[list, idx]], 
           Appearance -> 
            Dynamic@If[pressed, "Pressed", Automatic]]]], {i, 60}], 
       5]]}];

"functions"

(*comp@5*)
